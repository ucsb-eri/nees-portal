{"ts":1351738510807,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* vim: set tabstop=4 shiftwidth=4: */\n/*jslint mootools:true */\n\n(function (global) {\n    'use strict';\n    \n\tvar View = (function () {\n\t\treturn {\n\t\t\tinitialize: function () {\n\t\t\t\tthis.Tabs = new Tabs();\n\t\t\t\tthis.Map = new Map(this.Tabs.createTab('Map'));\n\t\t\t\tthis.Info = new Info(this.Tabs.createTab('Info'));\n\t\t\t\tthis.Table = new Table();\n\t\t\t\tthis.ChannelBox = new ChannelBox();\n\n\t\t\t\t$$(\".tabTitle\")[0].fireEvent('click');\n\t\t\t}\n\t\t};\n\t}) ();\n\tglobal.View = View;\n\n\tvar Tabs = (function () {\n\t\tvar\n\t\t\tdata\t=\t{\n\t\t\t\t// DOM Elements\n\t\t\t\tbar: null,\n\t\t\t\tview: null,\n\t\t\t\twrap: null\n\t\t\t},\n\t\t\tsettings = {\n\t\t\t\twrap: 'app-viewport'\n\t\t\t};\n\n\t\treturn new Class({\n\t\t\tinitialize: function () {\n\t\t\t\tdata.wrap = $(settings.wrap);\n\n\t\t\t\tdata.bar = new Element('div');\n\t\t\t\tdata.bar.set('id', 'tabBar');\n\t\t\t\tdata.wrap.adopt(data.bar);\n\n\t\t\t\tdata.view = new Element('div');\n\t\t\t\tdata.view.set('id', 'tabView');\n\t\t\t\tdata.wrap.adopt(data.view);\n\n\t\t\t\twindow.addEvent('resize', this.refreshSize.bind(View.Tabs));\n\t\t\t\tthis.refreshSize();\n\t\t\t},\n\t\t\tcreateTab: function (tabName) {\n\t\t\t\tvar\n\t\t\t\t\ttitle\t=\tnew Element('div'),\n\t\t\t\t\tview\t=\tnew Element('div');\n\n\t\t\t\ttitle.set({\n\t\t\t\t\t'class': 'tabTitle',\n\t\t\t\t\t'text': tabName\n\t\t\t\t});\n\t\t\t\ttitle.store('view', view);\n\t\t\t\ttitle.addEvent('click', this.openTab.bind(title));\n\n\t\t\t\tview.set('class', 'tabView');\n\n\t\t\t\tdata.bar.adopt(title);\n\t\t\t\tdata.view.adopt(view);\n\n\t\t\t\treturn view;\n\t\t\t},\n\t\t\topenTab: function () {\n\t\t\t\t$$('.tabTitle, .tabView').removeClass('active');\n\t\t\t\t$$(this, this.retrieve('view')).addClass('active');\n\t\t\t},\n\t\t\trefreshSize: function () {\n\t\t\t\tvar size = data.wrap.getCoordinates();\n\t\t\t\tdata.bar.setStyle('height', '25px');\n\t\t\t\tdata.view.setStyle('height',\n                    Math.max(size.height - 25, 0) + 'px');\n\t\t\t}\n\t\t});\n\t}) ();\n\n\tvar Map = (function () {\n\t\tvar\n\t\t\tdata\t=\t{\n\t\t\t\tmapCirc: new google.maps.Circle({\n\t\t\t\t\tfillColor: 'black',\n\t\t\t\t\tfillOpacity: 0.25,\n\t\t\t\t\tstrokeOpacity: 0\n\t\t\t\t}),\n\t\t\t\tmapObj: null,\n\t\t\t\tmarkers: []\n\t\t\t};\n\n\t\tfunction addMarker(lat, lon, ml) {\n\t\t\t// @@TODO: Add real size algorithm\n\t\t\tvar\n\t\t\t\tloc\t\t=\tnew google.maps.LatLng(lat, lon),\n\t\t\t\tmarker\t=\tnew google.maps.Marker({\n                    icon: Object.append({\n                        path: google.maps.SymbolPath.CIRCLE,\n                        fillOpacity: 0.5,\n                        fillColor: 'orange',\n                        strokeOpacity: 0,\n                    }, Settings.getCircleOptions(ml)),\n\t\t\t\t\tposition: loc,\n\t\t\t\t\tzIndex: 1\n\t\t\t\t});\n            \n\n\t\t\tmarker.setMap(data.mapObj);\n\t\t\tdata.markers.push(marker);\n\t\t}\n\t\tfunction clearMarkers() {\n\t\t\tfor (var idx = data.markers.length - 1; idx >= 0; idx--) {\n\t\t\t\tdata.markers[idx].setMap(null);\n\t\t\t\tdata.markers.pop();\n\t\t\t}\n\t\t}\n\t\tfunction drawCircle(center, rdx) {\n\t\t\t// Erase previous circle\n\t\t\tdata.mapCirc.setMap(null);\n\n\t\t\tdata.mapCirc.setCenter(center);\n\t\t\tdata.mapCirc.setRadius(rdx * 1000);\n\t\t\tdata.mapCirc.setMap(data.mapObj);\n\t\t}\n\n\t\treturn new Class({\n\t\t\tinitialize: function (el) {\n\t\t\t\tvar mapOpts = {\n\t\t\t\t\tmapTypeId: google.maps.MapTypeId.TERRAIN\n\t\t\t\t};\n\t\t\t\tdata.mapObj = new google.maps.Map(el, mapOpts);\n\t\t\t},\n\n\t\t\t// marker highlighting functions\n\t\t\tdehighlightMarker: function () {\n\t\t\t\tfor (var idx = 0, j = data.markers, k = j.length; idx < k; idx++) {\n\t\t\t\t\tj[idx].set(\"fillOpacity\", j[idx].get(\"oldOpacity\"));\n\t\t\t\t}\n\t\t\t},\n\t\t\thighlightMarker: function () {\n\t\t\t\tvar selIdx = this.retrieve(\"rowNum\");\n\t\t\t\tfor (var idx = 0, j = data.markers, k = j.length; idx < k; idx++) {\n\t\t\t\t\tj[idx].set(\"oldOpacity\", j[idx].get(\"fillOpacity\"));\n\t\t\t\t\tj[idx].set(\"fillOpacity\", idx === selIdx ? \"1\" : \"0.2\");\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetPosition: function(opts) {\n\t\t\t\tvar center =\n\t\t\t\t\tnew google.maps.LatLng(opts.site.lat, opts.site.lon);\n\t\t\t\tif (!data.markers) {\n                    return;\n\t\t\t\t}\n\n\t\t\t\tif (data.mapCirc.getCenter() &&\n                        data.mapCirc.getCenter().equals(center) &&\n                        data.mapCirc.getRadius() === opts.radius * 1000) {\n                    return;\n                }\n\n\t\t\t\tdata.mapObj.setOptions({\n\t\t\t\t\tcenter:\tcenter\n\t\t\t\t});\n\n\t\t\t\tdrawCircle(center, opts.radius);\n\t\t\t\tdata.mapObj.fitBounds(data.mapCirc.getBounds());\n\t\t\t},\n\t\t\tupdate: function (obj) {\n\t\t\t\tif (obj.getValues) {\n\t\t\t\t\tthis.setPosition(obj.getValues());\n\t\t\t\t} else if (obj.getEvents()) {\n\t\t\t\t\tclearMarkers();\n\t\t\t\t\tfor (var idx = 0, j = obj.getEvents(), k = j.length;\n                            idx < k; idx++) {\n\t\t\t\t\t\taddMarker(j[idx].lat, j[idx].lng, j[idx].ml);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}) ();\n\n    // Station info tab\n\tvar Info = (function () {\n\t\tvar\n\t\t\tdata\t=\t{\n\t\t\t\t// DOM Elements\n\t\t\t\ttest: null,\n\t\t\t\twrap: null\n\t\t\t};\n\n\t\treturn new Class({\n\t\t\tinitialize: function (el) {\n\t\t\t\tdata.wrap = el;\n\t\t\t\tvar testDiv = data.test = new Element('div', {\n\t\t\t\t\tstyles : {\n\t\t\t\t\t\t'backgroundColor': '#FFF',\n\t\t\t\t\t\t'height': '100%',\n\t\t\t\t\t\t'width': '100%'\n\t\t\t\t\t},\n\t\t\t\t\ttext: ''\n\t\t\t\t});\n\n\t\t\t\tdata.wrap.adopt(testDiv);\n\t\t\t},\n\t\t\tupdate: function (obj) {\n\t\t\t\tdata.test.set('text', obj.getValues().site.toString());\n\t\t\t}\n\t\t});\n\t}) ();\n\n\tvar Table = (function () {\n\t\tvar\n\t\t\tsettings\t=\t{\n\t\t\t\ttableHeader: {\n\t\t\t\t\ttime: 'Date (UTC)',\n\t\t\t\t\tdepth: 'Depth (km)',\n\t\t\t\t\tdist: 'Dist (km)',\n\t\t\t\t\tml:\t'Mag'\n\t\t\t\t},\n\t\t\t\twrap: 'app-evt-table'\n\t\t\t},\n\t\t\tdata\t=\tnull,\n\t\t\tel\t\t=\tnull;\n\t\treturn new Class({\n\t\t\tinitialize: function () {\n\t\t\t\tel = $(settings.wrap);\n\t\t\t\t$('depToEvid').addEvent('click', function (evt) {\n\t\t\t\t\tif (evt.target.checked) {\n\t\t\t\t\t\tdelete settings.tableHeader.depth;\n\t\t\t\t\t\tsettings.tableHeader.evid = 'Evid';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete settings.tableHeader.evid;\n\t\t\t\t\t\tsettings.tableHeader.depth = 'Depth';\n\t\t\t\t\t}\n\t\t\t\t\tthis.render();\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\taddRow: function (obj) {\n\t\t\t\tvar\n\t\t\t\t\tcurrIdx\t\t=\tel.getElements('tr.dataRow').length,\n\t\t\t\t\ttableRow\t=\tnew Element('tr');\n\n\t\t\t\ttableRow.addClass(currIdx % 2 ? 'even' : 'odd');\n\t\t\t\ttableRow.addClass('dataRow');\n\t\t\t\ttableRow.store('rowNum', currIdx);\n                tableRow.store('evid', obj.id);\n                tableRow.store('siteId', global.Model.Events.getSiteId());\n\n\t\t\t\tvar chkBox = new Element('input', { type: 'checkbox' });\n\t\t\t\ttableRow.adopt(chkBox);\n\n\t\t\t\tfor (var idx = 0, j = Object.keys(settings.tableHeader),\n                        k = j.length; idx < k; idx++) {\n\t\t\t\t\tvar tableCell = new Element('td');\n                    \n\t\t\t\t\tif (obj[j[idx]]) {\n                        tableCell.appendText(this.parse(obj[j[idx]]));\n\t\t\t\t\t}\n                    \n\t\t\t\t\ttableRow.adopt(tableCell);\n\t\t\t\t}\n\n\t\t\t\ttableRow.addEvent('mouseenter',\n                    View.Map.highlightMarker.bind(tableRow));\n\t\t\t\ttableRow.addEvent('mouseleave',\n                    View.Map.dehighlightMarker.bind(tableRow));\n                tableRow.addEvent('click', this.getChannels.bind(tableRow));\n\t\t\t\tel.adopt(tableRow);\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tel.empty();\n\t\t\t\tthis.writeHeader();\n\t\t\t},\n            getChannels: function () {\n                global.Model.Channels.update(this.retrieve('evid'),\n                    this.retrieve('siteId'));\n            },\n\t\t\tparse: function (obj) {\n\t\t\t\t// @@TODO: Parse data into readable format\n\t\t\t\tif (~obj.toString().indexOf('UTC')) {\n\t\t\t\t\tobj = obj.toString().replace(' (UTC)', '');\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\trender: function () {\n\t\t\t\tthis.clear();\n\n\t\t\t\tvar tblData = data.getEvents();\n\t\t\t\tfor (var idx = 0, l = tblData.length; idx < l; idx++) {\n\t\t\t\t\tthis.addRow(tblData[idx]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: function (obj) {\n\t\t\t\tdata = obj;\n\t\t\t\tthis.render();\n\t\t\t},\n\t\t\twriteHeader: function () {\n\t\t\t\tvar\n\t\t\t\t\ttHead\t=\tnew Element('thead'),\n\t\t\t\t\ttRow\t=\tnew Element('tr');\n\n\t\t\t\ttRow.adopt(new Element('th')); // Empty col for chkboxes\n\n\t\t\t\tfor (var idx = 0, j = Object.values(settings.tableHeader),\n                        l = j.length; idx < l; idx++) {\n\t\t\t\t\tvar\n\t\t\t\t\t\theadCol = new Element('th', {\n\t\t\t\t\t\t\ttext: j[idx]\n\t\t\t\t\t\t});\n\t\t\t\t\theadCol.store('idx', idx);\n\t\t\t\t\theadCol.addEvent('click', function (evt) {\n                        var sortMarkers = evt.target.getElements('span.sort');\n                        if (sortMarkers) {\n                            sortMarkers.toggleClass('asc');\n                            sortMarkers.toggleClass('desc');\n                        } else {\n                            $$('.sort').destroy();\n                            \n                            evt.target.adopt('span', {\n                                'class': 'sort desc'\n                            });\n                        }\n\t\t\t\t\t\tglobal.Model.Data.sortBy(\n                            Object.keys(settings.tableHeader)[\n                                evt.target.retrieve('idx')\n                            ]\n                        );\n\t\t\t\t\t});\n\t\t\t\t\ttRow.adopt(headCol);\n\t\t\t\t}\n\t\t\t\ttHead.adopt(tRow);\n\t\t\t\tel.adopt(tHead);\n\t\t\t}\n\t\t});\n\t}) ();\n\n\tvar ChannelBox = (function () {\n\t\tvar\n            data        =   null,\n            el          =   {},\n\t\t\tsettings\t=\t{\n\t\t\t\tsideBar: 'app-grid',\n\t\t\t\ttitleBar: 'app-title',\n                test: false\n\t\t\t};\n\n\t\tfunction getOffsets() {\n\t\t\treturn {\n\t\t\t\tx: $(settings.sideBar).getSize().x,\n\t\t\t\ty: $(settings.titleBar).getSize().y\n\t\t\t};\n\t\t}\n\t\treturn new Class({\n\t\t\tinitialize: function () {\n                var\n                    wrap = el.wrap = new Element('div', {'id': 'channel-box'});\n                document.body.adopt(wrap);\n\n                window.addEvent('resize', this.onResize.bind(this));\n                this.onResize();\n                el.wrap.fade('hide');\n\t\t\t},\n            \n            hide: function () {\n                el.wrap.fade('hide');\n            },\n            onResize: function () {\n                el.wrap.setStyles({\n                    top: getOffsets().y + 'px',\n                    height: (window.getSize().y - getOffsets().y) + 'px',\n                    left: getOffsets().x + 'px'\n                });\n            },\n            render: function () {\n                var\n                    bodyRow, headRow,\n                    \n                    scrollPane  =   new Element('div'),\n                    tBodyTable  =   new Element('table'), // Put header and body\n                    tHeadTable  =   new Element('table'), // in separate tables\n                    tBody       =   new Element('tbody'),\n                    tHead       =   new Element('thead'),\n                    tHeadRow    =   new Element('tr');\n\n                el.wrap.empty();\n\n                // Write header\n                tHeadRow.adopt(new Element('th', { text: '?' })); // Checkbox cl\n                for (var i = 0, j = data.$meta.headers, k = j.length; i < k;\n                        i++) {\n                    tHeadRow.adopt(new Element('th', {\n                        text: data.$meta.headers[i]\n                    }));\n                }\n                \n                tHead.adopt(tHeadRow);\n                tHeadTable.adopt(tHead);\n                el.wrap.adopt(tHeadTable);\n\n                // Write table\n                for (var i = 0, j = data.$data, k = j.length; i < k; i++) {\n                    var\n                        tRow = new Element('tr'),\n                        chkBox = new Element('td');\n                        \n                    chkBox.adopt(new Element('input', {\n                        type: 'checkbox'\n                    }));\n                    tRow.adopt(chkBox);\n                    \n                    for (var p = 0, q = j[i], r = q.length; p < r; p++) {\n                        tRow.adopt(new Element('td', {\n                            text: q[p]\n                        }));\n                    }\n\n                    tRow.addClass(i % 2 === 0 ? 'even' : 'odd');\n                    tBody.adopt(tRow);\n                }\n                tBodyTable.adopt(tBody);\n                tBodyTable.setStyle('width', '100%');\n                scrollPane.adopt(tBodyTable);\n                scrollPane.setStyle('overflow', 'auto');\n                scrollPane.setStyle('padding-bottom', '2em');\n                scrollPane.setStyle('width', '100%');\n                el.wrap.adopt(scrollPane);\n                \n                window.addEvent('resize', function () {\n                    scrollPane.setStyle('height',\n                        ($('channel-box').getSize().y - tHeadRow.getSize().y) + 'px');\n                });\n                scrollPane.setStyle('height',\n                    ($('channel-box').getSize().y - tHeadRow.getSize().y) + 'px');\n\n                if (tBodyTable.getElements('tr').length > 0) {\n                    // sync thead and tbody widths\n                    bodyRow =   tBodyTable.getElements('tr')[0],\n                    headRow =   tHeadTable.getElements('tr')[0];\n\n                    for (var i = 0, j = bodyRow.getElements('td'),\n                            k = headRow.getElements('th'), l = j.length;\n                            i < l; i++) {\n                        $$(j[i], k[i]).setStyle('width', j[i].getSize().x + 'px');\n                    }\n\n                    tHeadTable.set('width', tBodyTable.getSize().x + 'px');\n                }\n\n                this.show();\n            },\n            show: function () {\n                el.wrap.fade('show');\n            },\n            update: function (obj) {\n                data = obj.getChannels();\n                this.render();\n            }\n\t\t});\n\t}) ();\n\n}) (this);\n"]],"start1":0,"start2":0,"length1":0,"length2":13198}]],"length":13198}
{"contributors":[],"silentsave":false,"ts":1351759750090,"patch":[[{"diffs":[[0,":true */"],[1,"\nvar app = app || {};"],[0,"\n\n(funct"]],"start1":56,"start2":56,"length1":16,"length2":37},{"diffs":[[0,"';\n    \n"],[1,"    app.View = {};\n    \n    var Map = {};\n    \n"],[0,"\tvar Vie"]],"start1":123,"start2":123,"length1":16,"length2":63},{"diffs":[[0,"w;\n\n"],[-1,"\tvar Tabs = (function () {\n\t\tvar\n\t\t\tdata\t=\t{\n\t\t\t\t// DOM Elements\n\t\t\t\tbar: null,\n\t\t\t\tview: null,\n\t\t\t\twrap: null\n\t\t\t},\n\t\t\tsettings = {\n\t\t\t\twrap: 'app-viewport'\n\t\t\t};\n\n\t\treturn new Class({\n\t\t\tinitialize: function () {\n\t\t\t\tdata.wrap = $(settings.wrap);\n\n\t\t\t\tdata.bar = new Element('div');\n\t\t\t\tdata.bar.set('id', 'tabBar');\n\t\t\t\tdata.wrap.adopt(data.bar);\n\n\t\t\t\tdata.view = new Element('div');\n\t\t\t\tdata.view.set('id', 'tabView');\n\t\t\t\tdata.wrap.adopt(data.view);\n\n\t\t\t\twindow.addEvent('resize', this.refreshSize.bind(View.Tabs));\n\t\t\t\tthis.refreshSize();\n\t\t\t},\n\t\t\tcreateTab: function (tabName) {\n\t\t\t\tvar\n\t\t\t\t\ttitle\t=\tnew Element('div'),\n\t\t\t\t\tview\t=\tnew Element('div');\n\n\t\t\t\ttitle.set({\n\t\t\t\t\t'class': 'tabTitle',\n\t\t\t\t\t'text': tabName\n\t\t\t\t});\n\t\t\t\ttitle.store('view', view);\n\t\t\t\ttitle.addEvent('click', this.openTab.bind(title));\n\n\t\t\t\tview.set('class', 'tabView');\n\n\t\t\t\tdata.bar.adopt(title);\n\t\t\t\tdata.view.adopt(view);\n\n\t\t\t\treturn view;\n\t\t\t},\n\t\t\topenTab: function () {\n\t\t\t\t$$('.tabTitle, .tabView').removeClass('active');\n\t\t\t\t$$(this, this.retrieve('view')).addClass('active');\n\t\t\t},\n\t\t\trefreshSize: function () {\n\t\t\t\tvar size = data.wrap.getCoordinates();\n\t\t\t\tdata.bar.setStyle('height', '25px');\n\t\t\t\tdata.view.setStyle('height',\n                    Math.max(size.height - 25, 0) + 'px');\n\t\t\t}\n\t\t});\n\t}) ();\n"],[0,"\n\tva"]],"start1":530,"start2":530,"length1":1305,"length2":8}]],"length":11969,"saved":false}
{"ts":1351759993120,"patch":[[{"diffs":[[0,"=\t{\n"],[-1,"\t\t\t\tmapCirc: new google.maps.Circle({\n\t\t\t\t\tfillColor: 'black',\n\t\t\t\t\tfillOpacity: 0.25,\n\t\t\t\t\tstrokeOpacity: 0\n\t\t\t\t}),\n"],[0,"\t\t\t\t"]],"start1":575,"start2":575,"length1":125,"length2":8},{"diffs":[[0,"ings.get"],[-1,"Circle"],[1,"Marker"],[0,"Options("]],"start1":1044,"start2":1044,"length1":22,"length2":22}]],"length":11852,"saved":false}
{"ts":1351760009700,"patch":[[{"diffs":[[0,"};\n    \n"],[1,"    \n"],[0,"\tvar Vie"]],"start1":170,"start2":170,"length1":16,"length2":21}]],"length":11857,"saved":false}
{"ts":1351760048945,"patch":[[{"diffs":[[0," = {};\n    \n"],[1,"    var View = new Class({\n        Implements: Options,\n        \n        options: {}\n    });\n    \n"],[0,"    var Map "]],"start1":143,"start2":143,"length1":24,"length2":122}]],"length":11955,"saved":false}
{"ts":1351760093152,"patch":[[{"diffs":[[0,"ons: {}\n"],[1,"        // render()\n"],[0,"    });\n"]],"start1":232,"start2":232,"length1":16,"length2":36}]],"length":11975,"saved":false}
{"ts":1351760112379,"patch":[[{"diffs":[[0,"ons: {}\n"],[1,"        // link() - call render on event type\n"],[0,"        "]],"start1":232,"start2":232,"length1":16,"length2":62}]],"length":12021,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351805290080,"patch":[[{"diffs":[[0,"    "],[-1,"Implements: Options,\n        \n        options: {"],[1,"init: function (options) {\n        "],[0,"}\n  "]],"start1":186,"start2":186,"length1":56,"length2":43}]],"length":12008,"saved":false}
{"ts":1351805343678,"patch":[[{"diffs":[[0,"(options) {\n"],[1,"            this.implement(options);\n"],[0,"        }\n  "]],"start1":205,"start2":205,"length1":24,"length2":61}]],"length":12045,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351806883478,"patch":[[{"diffs":[[0,"(options) {\n"],[1,"            _.bindAll(this);\n"],[0,"            "]],"start1":205,"start2":205,"length1":24,"length2":53},{"diffs":[[0,"tions);\n        "],[-1,"}"],[1,"    this.setup();\n        },\n        link: function (topic) {\n            global.PubSub.subscribe(topic, this.render);\n        },\n        render: function () {\n        },"],[0,"\n        // link"]],"start1":275,"start2":275,"length1":33,"length2":202},{"diffs":[[0,"ender()\n"],[1,"        // setup\n"],[0,"    });\n"]],"start1":520,"start2":520,"length1":16,"length2":33}]],"length":12260,"saved":false}
{"ts":1351807193815,"patch":[[{"diffs":[[0,"ion () {"],[-1,"\n        "],[0,"},\n     "]],"start1":442,"start2":442,"length1":25,"length2":16},{"diffs":[[0,"    "],[-1,"// link() - call render on event type\n        // render()\n        // setup"],[1,"setup: function () {}"],[0,"\n   "]],"start1":457,"start2":457,"length1":82,"length2":29}]],"length":12198,"saved":false}
{"ts":1351809989011,"patch":[[{"diffs":[[0,"r Map = "],[-1,"{};"],[1,"new View({\n        el: $('app-viewport'),\n        setup: function () {\n            this._mapobj = global.google.maps.Map()\n        }"],[0,"\n    "],[1,"});"],[0,"\n    \n\tv"]],"start1":502,"start2":502,"length1":24,"length2":156}]],"length":12330,"saved":false}
{"ts":1351810020042,"patch":[[{"diffs":[[0,"        "],[1,"_"],[0,"el: $('a"]],"start1":521,"start2":521,"length1":16,"length2":17},{"diffs":[[0,"aps.Map("],[-1,")"],[1,"this._el);"],[0,"\n       "]],"start1":624,"start2":624,"length1":17,"length2":26}]],"length":12340,"saved":false}
{"ts":1351810394175,"patch":[[{"diffs":[[0,"this._el"],[-1,");"],[1,", {\n\t\t\t\tmapTypeId: google.maps.MapTypeId.TERRAIN\n            }"],[0,"\n       "]],"start1":632,"start2":632,"length1":18,"length2":78}]],"length":12400,"saved":false}
{"ts":1351810409536,"patch":[[{"diffs":[[0,"IN\n            }"],[1,");"],[0,"\n        }\n    }"]],"start1":686,"start2":686,"length1":32,"length2":34}]],"length":12402,"saved":false}
{"ts":1351810454735,"patch":[[{"diffs":[[0,");\n    \n"],[1,"    /*\n"],[0,"\tvar Vie"]],"start1":720,"start2":720,"length1":16,"length2":23},{"diffs":[[0,"\n\t}) ();"],[1,"\n    */"],[0,"\n\n}) (th"]],"start1":12388,"start2":12388,"length1":16,"length2":23}]],"length":12416,"saved":false}
{"ts":1351810653397,"patch":[[{"diffs":[[0,"    init"],[1,"ialize"],[0,": functi"]],"start1":186,"start2":186,"length1":16,"length2":22}]],"length":12422,"saved":false}
{"ts":1351810820938,"patch":[[{"diffs":[[0,"    "],[-1,"this.implement("],[1,"Object.append(this, "],[0,"opti"]],"start1":260,"start2":260,"length1":23,"length2":28}]],"length":12427,"saved":false}
{"ts":1351810933336,"patch":[[{"diffs":[[0,"mapobj ="],[1," new"],[0," global."]],"start1":611,"start2":611,"length1":16,"length2":20}]],"length":12431,"saved":false}
{"ts":1351811109293,"patch":[[{"diffs":[[0,"this._el, {\n"],[1,"                center: new google.maps.LatLng(0, 0),\n"],[0,"\t\t\t\tmapTypeI"]],"start1":647,"start2":647,"length1":24,"length2":78},{"diffs":[[0,".TERRAIN"],[1,",\n                zoom: 0"],[0,"\n       "]],"start1":749,"start2":749,"length1":16,"length2":41}]],"length":12510,"saved":false}
{"ts":1351811982379,"patch":[[{"diffs":[[0,"viewport'),\n"],[1,"        setPosition: function (data) {\n\t\t\tvar center = new google.maps.LatLng(data.site.lat, data.site.lon);\n\n\t\t\tif (this._mapCirc.getCenter() &&\n                this._mapCirc.getCenter().equals(center) &&\n                this._mapCirc.getRadius() === data.radius * 1000) {\n                return;\n            }\n\n\t\t\tdata.mapObj.setOptions({\n\t\t\t\tcenter:\tcenter\n\t\t\t});\n\n\t\t\tdrawCircle(center, opts.radius);\n\t\t\tdata.mapObj.fitBounds(this._rangeCircle.getBounds());\n        },\n"],[0,"        setu"]],"start1":552,"start2":552,"length1":24,"length2":496}]],"length":12982,"saved":false}
{"ts":1351812095745,"patch":[[{"diffs":[[0,"      }\n\n\t\t\t"],[-1,"data."],[1,"this._"],[0,"mapObj.setOp"]],"start1":868,"start2":868,"length1":29,"length2":30},{"diffs":[[0,"});\n\n\t\t\t"],[1,"this."],[0,"drawCirc"]],"start1":928,"start2":928,"length1":16,"length2":21},{"diffs":[[0,"wCircle(center, "],[-1,"opts"],[1,"data"],[0,".radius);\n\t\t\tdat"]],"start1":944,"start2":944,"length1":36,"length2":36},{"diffs":[[0,"us);\n\t\t\t"],[-1,"data."],[1,"this._"],[0,"mapObj.f"]],"start1":969,"start2":969,"length1":21,"length2":22}]],"length":12989,"saved":false}
{"ts":1351812119940,"patch":[[{"diffs":[[0,"\t\t\tthis."],[1,"_"],[0,"drawCirc"]],"start1":933,"start2":933,"length1":16,"length2":17}]],"length":12990,"saved":false}
{"ts":1351812206508,"patch":[[{"diffs":[[0,"viewport'),\n"],[1,"        _drawCircle: function (center, radius) {\n\t\t\tthis._mapCirc.setMap(null);\n\t\t\tthis._mapCirc.setCenter(center);\n\t\t\tthis._mapCirc.setRadius(rdx * 1000);\n\t\t\tthis._mapCirc.setMap(data.mapObj);\n        },\n"],[0,"        setP"]],"start1":552,"start2":552,"length1":24,"length2":229}]],"length":13195,"saved":false}
{"ts":1351812222816,"patch":[[{"diffs":[[0,"Circ.setRadius(r"],[-1,"dx"],[1,"adius"],[0," * 1000);\n\t\t\tthi"]],"start1":692,"start2":692,"length1":34,"length2":37},{"diffs":[[0,"_mapCirc.setMap("],[-1,"data."],[1,"this._"],[0,"mapObj);\n       "]],"start1":731,"start2":731,"length1":37,"length2":38}]],"length":13199,"saved":false}
{"ts":1351813158335,"patch":[[{"diffs":[[0,"      }\n    });\n"],[1,"    Map.link(apps.Models.Inputs);\n"],[0,"    \n    /*\n\tvar"]],"start1":1490,"start2":1490,"length1":32,"length2":66}]],"length":13233,"saved":false}
{"ts":1351813362064,"patch":[[{"diffs":[[0,"link(app"],[-1,"s"],[0,".Models."]],"start1":1514,"start2":1514,"length1":17,"length2":16}]],"length":13232,"saved":false}
{"ts":1351839865174,"patch":[[{"diffs":[[0,"bj);\n        },\n"],[1,"        render() {\n        },\n"],[0,"        setPosit"]],"start1":757,"start2":757,"length1":32,"length2":62}]],"length":13262,"saved":false}
{"ts":1351839971562,"patch":[[{"diffs":[[0,"  render"],[1,": function "],[0,"() {\n   "]],"start1":779,"start2":779,"length1":16,"length2":27}]],"length":13273,"saved":false}
